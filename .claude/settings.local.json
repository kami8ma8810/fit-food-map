{
  "permissions": {
    "allow": [
      "Bash(npx create-expo-app@latest . --template)",
      "Bash(npx create-expo-app@latest temp-project --template)",
      "Bash(npx create-expo-app@latest temp-project --template blank-typescript)",
      "Bash(cp -r temp-project/* .)",
      "Bash(cp -r temp-project/.* .)",
      "Bash(true)",
      "Bash(rm -rf temp-project)",
      "Bash(npm install @react-navigation/native @react-navigation/stack @react-navigation/bottom-tabs @reduxjs/toolkit react-redux firebase react-native-maps-osm nativewind expo-location)",
      "Bash(npm install @react-navigation/native @react-navigation/stack @react-navigation/bottom-tabs @reduxjs/toolkit react-redux firebase react-native-maps nativewind expo-location)",
      "Bash(npm install -D @testing-library/react-native @testing-library/jest-native jest-expo)",
      "Bash(npm install -D @testing-library/react-native @testing-library/jest-native jest-expo --legacy-peer-deps)",
      "Bash(npm test)",
      "Bash(npm install -D jest)",
      "Bash(npm uninstall jest jest-expo @testing-library/jest-native)",
      "Bash(npm install -D vitest vite @vitejs/plugin-react happy-dom)",
      "Bash(rm jest.config.js jest-setup.js)",
      "Bash(npm uninstall vitest vite @vitejs/plugin-react happy-dom)",
      "Bash(npm install -D jest @types/jest ts-jest)",
      "Bash(rm vitest.config.ts vitest-setup.ts)",
      "Bash(npm install -D @axe-core/react-native)",
      "Bash(npm install -D react-native-accessibility-engine)",
      "Bash(git add README.md)",
      "Bash(git commit -m \"$(cat <<''EOF''\ndocs: add comprehensive project documentation\n\n- Add project overview and goals for Fit Food Map\n- Define technical stack (React Native + Expo, Firebase, etc.)\n- Outline Phase-based implementation plan\n- Include WCAG 2.1 AA accessibility requirements\n- Add implementation status tracking section\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git add App.tsx app.json index.ts tsconfig.json .gitignore assets/)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat: initialize React Native + Expo project\n\n- Set up Expo project with TypeScript template\n- Configure TypeScript with strict settings\n- Add basic app structure and assets\n- Set up project entry point\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git add package.json package-lock.json)",
      "Bash(git commit -m \"$(cat <<''EOF''\ndeps: install core dependencies\n\n- Add React Navigation for app navigation\n- Add Redux Toolkit for state management\n- Add Firebase for backend services\n- Add React Native Maps for location features\n- Add NativeWind for styling\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git add jest.config.js jest-setup.ts mocks/)",
      "Bash(git commit -m \"$(cat <<''EOF''\ntest: set up optimized Jest testing framework\n\n- Configure Jest with performance optimizations\n- Add React Native module mocks\n- Set up Firebase and Expo Location mocks\n- Enable TypeScript support with ts-jest\n- Configure test file patterns and coverage\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git add types/)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat: add core type definitions\n\n- Define TypeScript interfaces for Restaurant, Menu, User\n- Add Nutrition and Location data structures\n- Create search filter and meal history types\n- Include nutrition estimation interfaces\n- Set up foundation for type-safe development\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git add utils/nutritionCalculator.ts utils/__tests__/nutritionCalculator.test.ts)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat: implement nutrition calculation utilities (TDD)\n\n- Add PFC ratio calculation with calorie conversion\n- Implement keyword-based nutrition estimation\n- Create ingredient and cooking method databases\n- Add confidence scoring for estimates\n- Include comprehensive test coverage (5 tests)\n\nFollows TDD approach for reliable nutrition calculations.\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git add utils/accessibility.ts utils/__tests__/accessibility.test.ts)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat: add WCAG 2.1 AA accessibility utilities\n\n- Implement color contrast ratio calculation\n- Add WCAG AA/AAA compliance checkers\n- Create accessibility props builders for common UI elements\n- Include touch target size validation (44px minimum)\n- Provide WCAG-compliant color palette\n- Add comprehensive test coverage (15 tests)\n\nEnsures app meets accessibility standards for inclusive design.\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git add .jest-cache/ .claude/)",
      "Bash(git commit -m \"$(cat <<''EOF''\nchore: add development environment files\n\n- Include Jest cache directory for faster test runs\n- Add Claude Code configuration files\n- Set up development workspace\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git reset --soft HEAD~1)",
      "Bash(git rm --cached -r .jest-cache)",
      "Bash(git add .gitignore)",
      "Bash(git commit -m \"$(cat <<'EOF'\nchore: remove Jest cache from version control\n\n- Remove .jest-cache directory from git tracking\n- Add .jest-cache to .gitignore to prevent future commits\n- Clean up repository by excluding build artifacts\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(npm install expo-router)",
      "Bash(mkdir -p \"app/(tabs)\" app/restaurant app/menu components/Map components/Restaurant components/Common)",
      "Bash(rm /Users/h.kamiyama/GitHub/fit-food-map/App.tsx)",
      "Bash(mkdir -p hooks)",
      "Bash(git add .)",
      "Bash(git commit -m \"$(cat <<'EOF'\nfeat: implement navigation structure and map functionality\n\n- Set up Expo Router with tab navigation (Map, History, Profile)\n- Implement MapView component with react-native-maps\n- Add location permission handling and current location display\n- Create custom useLocation hook for location management\n- Add restaurant markers with navigation to detail screens\n- Include accessibility labels and hints throughout\n- Update app.json with proper app name and Expo Router config\n\nPhase 1 core functionality now complete with:\n- ✅ Basic navigation structure\n- ✅ Map component implementation  \n- ✅ Location services integration\n- ⏳ Firebase setup (next)\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(mkdir -p services)",
      "Bash(git commit -m \"$(cat <<'EOF'\nfeat: add Firebase integration and setup documentation\n\n- Create Firebase configuration with environment variables\n- Add RestaurantService for Firestore data operations\n- Include comprehensive Firebase setup guide (FIREBASE_SETUP.md)\n- Set up environment variable management (.env.example)\n- Configure Claude settings for automatic bash permission\n\nFeatures implemented:\n- Firebase config with proper env var handling\n- Restaurant and menu data service layer\n- Location-based restaurant queries\n- Search functionality with distance filtering\n- Complete setup documentation for developers\n\nPhase 1 基盤構築 now complete! ✅\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(claude config list)",
      "Bash(claude config set --global preferredNotifChannel terminal_bell)",
      "Bash(claude config get preferredNotifChannel)",
      "Bash(printf '\\a')",
      "Bash(afplay /System/Library/Sounds/Ping.aiff)",
      "Bash(ls /System/Library/Sounds/)",
      "Bash(afplay /System/Library/Sounds/Glass.aiff)",
      "Bash(afplay /System/Library/Sounds/Hero.aiff)",
      "Bash(afplay /System/Library/Sounds/Sosumi.aiff)",
      "Bash(afplay /System/Library/Sounds/Submarine.aiff)",
      "Bash(afplay /System/Library/Sounds/Funk.aiff)",
      "Bash(afplay /System/Library/Sounds/Frog.aiff)",
      "Bash(afplay /System/Library/Sounds/Purr.aiff)",
      "Bash(mkdir -p data)",
      "Bash(notify)",
      "Bash(source ~/.zshrc)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat: implement data layer with sample restaurant data\n\n- Add comprehensive sample data for major chain restaurants\n- Create custom hooks for restaurant and menu data fetching\n- Implement MockRestaurantService for development without Firebase\n- Update map screen to use real data hooks with loading states\n- Enhance restaurant detail screen with full functionality\n- Include restaurant info, hours, and menu listings\n- Add proper error handling and loading indicators\n- Maintain accessibility throughout all screens\n\nFeatures now working:\n- ✅ Real-time restaurant data loading\n- ✅ Location-based restaurant filtering  \n- ✅ Restaurant detail pages with menus\n- ✅ Navigation between map and detail screens\n- ⏳ Menu detail pages (next)\n\nPhase 2 データ基盤 nearly complete! 📊\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(mkdir -p components/Nutrition)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat: implement comprehensive menu detail screen with nutrition visualization\n\n- Create useMenu hook for individual menu data fetching\n- Build PFCBars component for visual macro distribution\n- Add NutritionTable component with detailed nutritional information\n- Implement menu detail screen with complete functionality\n- Include health insights and data source confidence indicators\n- Add visual nutrition metrics and sodium level assessment\n- Support tags display and price information\n- Maintain full accessibility throughout components\n\nFeatures now complete:\n- ✅ Menu detail pages with real data\n- ✅ PFC macro visualization (bar charts)\n- ✅ Comprehensive nutrition tables\n- ✅ Health insights and assessments\n- ✅ Data source and confidence display\n- ✅ Tag-based categorization\n\nFull navigation flow working:\nMap → Restaurant Detail → Menu Detail 🎯\n\nPhase 2 データ基盤 + Menu Details complete! 📊🍽️\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(mkdir -p components/Search)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat: implement comprehensive search and filter functionality\n\n- Create SearchBar component with real-time search capability\n- Build FilterPanel component with multiple filter options\n- Add high protein menu filtering (25g+ protein)\n- Implement distance-based filtering (500m - 5km)\n- Add price range filtering with preset ranges\n- Create category-based filtering with tag matching\n- Enhance MockRestaurantService with advanced search logic\n- Update useRestaurants hook to support complex filtering\n- Integrate search UI into map screen with overlay design\n- Add visual filter indicators and active search feedback\n- Include search results counter and clear functionality\n- Maintain full accessibility throughout search components\n\nSearch features now complete:\n- ✅ Real-time restaurant and menu search\n- ✅ High protein menu discovery (25g+)\n- ✅ Distance-based restaurant filtering\n- ✅ Price range filtering\n- ✅ Category/tag-based filtering\n- ✅ Combined filter functionality\n- ✅ Visual search feedback and indicators\n\nFull app functionality now operational! 🔍✨\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(npm uninstall react-native-maps-osm)",
      "Bash(npx expo install expo-maps)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfix: migrate from react-native-maps to expo-maps\n\n- Replace react-native-maps with expo-maps for Expo compatibility\n- Update MapView component to use expo-maps Map and Marker\n- Add expo-maps mock for Jest testing\n- Update jest.config.js to include expo-maps mock mapping\n- Fix RNMapsAirModule native module error\n\nTechnical changes:\n- react-native-maps → expo-maps\n- MapView → Map component\n- Updated prop structure for Expo Maps\n- Added proper mocking for test environment\n\nApp should now run without native module errors! 🗺️✅\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(npm uninstall expo-maps)",
      "Bash(npm start)"
    ],
    "deny": [],
    "defaultBashPermission": "allow"
  }
}